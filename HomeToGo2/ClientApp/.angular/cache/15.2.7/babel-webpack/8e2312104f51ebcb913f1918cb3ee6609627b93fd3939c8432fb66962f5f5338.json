{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Username is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, RegisterComponent_div_16_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, RegisterComponent_div_16_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors.email);\n  }\n}\nfunction RegisterComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters long with a number and a symbol.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, RegisterComponent_div_22_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵtemplate(2, RegisterComponent_div_22_div_2_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors.minlength);\n  }\n}\nfunction RegisterComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirmation password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, RegisterComponent_div_28_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(27);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.errors.required);\n  }\n}\nfunction RegisterComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.errorMessage);\n  }\n}\nfunction RegisterComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r10.successMessage);\n  }\n}\nconst _c0 = function () {\n  return [\"/login\"];\n};\nexport class RegisterComponent {\n  // Inject AuthService and Router for handling registration and navigation\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.username = ''; // Add username\n    this.password = '';\n    this.confirmPassword = '';\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    // Lifecycle hook for initialization, can be used for additional setup\n  }\n  register() {\n    // Reset error and success messages\n    this.errorMessage = '';\n    this.successMessage = '';\n    // Set loading status to true\n    this.isLoading = true;\n    // Check if password and confirm password fields match\n    if (this.password !== this.confirmPassword) {\n      this.isLoading = false;\n      this.errorMessage = 'Passwords do not match';\n      return;\n    }\n    // Call AuthService's register method with email, username, and password\n    this.authService.register(this.email, this.username, this.password).subscribe(response => {\n      // On successful registration, display a success message and automatically log in the user\n      this.successMessage = 'Registration successful!';\n      this.loginAfterRegister(); // Call the login function after successful registration\n    }, error => {\n      // Handle errors and display message to the user\n      this.isLoading = false;\n      this.errorMessage = error.error.message || 'Registration failed';\n    });\n  }\n  // Private method to automatically log in the user after successful registration\n  loginAfterRegister() {\n    this.authService.login(this.username, this.password).subscribe(success => {\n      // Navigate to the home or dashboard page after successful login\n      this.router.navigate(['/']);\n    }, loginError => {\n      // Handle login error after registration\n      this.errorMessage = 'Automatic login failed. Please log in manually.';\n      this.isLoading = false;\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 35,\n  vars: 13,\n  consts: [[1, \"form-container\"], [3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"usernameField\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"emailField\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 3, \"ngModel\", \"ngModelChange\"], [\"passwordField\", \"ngModel\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"confirmPasswordField\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"id\", \"loginregister\", 1, \"btn\", \"btn-outline-secondary\", 3, \"routerLink\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"alert\", \"alert-success\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, RegisterComponent_div_10_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9, 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, RegisterComponent_div_16_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, RegisterComponent_div_22_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 15, 16);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, RegisterComponent_div_28_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"button\", 17);\n      i0.ɵɵtext(30, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"a\", 18);\n      i0.ɵɵtext(32, \"Or Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(33, RegisterComponent_div_33_Template, 2, 1, \"div\", 7);\n      i0.ɵɵtemplate(34, RegisterComponent_div_34_Template, 2, 1, \"div\", 19);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      const _r1 = i0.ɵɵreference(9);\n      const _r3 = i0.ɵɵreference(15);\n      const _r5 = i0.ɵɵreference(21);\n      const _r7 = i0.ɵɵreference(27);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.errors && (_r3.dirty || _r3.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.errors && (_r5.dirty || _r5.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r7.errors && (_r7.dirty || _r7.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(12, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.EmailValidator, i4.NgModel, i4.NgForm, i2.RouterLink],\n  styles: [\".form-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  margin-top: 5rem;\\n  font-family: Arial, sans-serif; \\n}\\n\\n.form-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #333; \\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 300px; \\n  padding: 10px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  padding: 10px 20px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\n.alert[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  color: white;\\n  padding: 10px;\\n  border-radius: 5px;\\n  text-align: center;\\n}\\n\\n.alert-danger[_ngcontent-%COMP%] {\\n  background-color: #dc3545;\\n}\\n\\n.alert-success[_ngcontent-%COMP%] {\\n  background-color: #28a745;\\n}\\n\\n#loginregister[_ngcontent-%COMP%]{\\n  margin-left: 7rem;\\n\\n}\\n.error[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXV0aGVudGljYXRpb24vcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnRkFBZ0Y7O0FBRWhGO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQiw4QkFBOEIsRUFBRSx1Q0FBdUM7QUFDekU7O0FBRUE7RUFDRSxXQUFXLEVBQUUsb0JBQW9CO0VBQ2pDLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZLEVBQUUsK0JBQStCO0VBQzdDLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlCQUFpQjs7QUFFbkI7QUFDQTtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBZGQgdGhpcyBDU1MgdG8gYSBnbG9iYWwgc3R5bGVzaGVldCBvciB0aGUgaW5kaXZpZHVhbCBjb21wb25lbnQgc3R5bGVzaGVldHMgKi9cblxuLmZvcm0tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDVyZW07XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsgLyogQ2hhbmdlIHRoaXMgdG8gbWF0Y2ggQXBwbGUncyBzdHlsZSAqL1xufVxuXG4uZm9ybS1jb250YWluZXIgaDIge1xuICBjb2xvcjogIzMzMzsgLyogRGFyayBncmV5IGNvbG9yICovXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxuLmZvcm0tZ3JvdXAgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4uZm9ybS1ncm91cCBpbnB1dCB7XG4gIHdpZHRoOiAzMDBweDsgLyogQWRqdXN0IHRoZSB3aWR0aCBhcyBuZWVkZWQgKi9cbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uYnRuLXByaW1hcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJ0bi1wcmltYXJ5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcbn1cblxuLmFsZXJ0IHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmFsZXJ0LWRhbmdlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkYzM1NDU7XG59XG5cbi5hbGVydC1zdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI4YTc0NTtcbn1cblxuI2xvZ2lucmVnaXN0ZXJ7XG4gIG1hcmdpbi1sZWZ0OiA3cmVtO1xuXG59XG4uZXJyb3Ige1xuICBjb2xvcjogcmVkO1xuICBmb250LXNpemU6IDAuOGVtO1xufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","RegisterComponent","constructor","authService","router","ngOnInit","register","errorMessage","successMessage","isLoading","password","confirmPassword","email","username","subscribe","response","loginAfterRegister","error","message","login","success","navigate","loginError","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/ibrahim/Projects/HomeToGo2/HomeToGo2/HomeToGo2/ClientApp/src/app/Authentication/register.component.html","/Users/ibrahim/Projects/HomeToGo2/HomeToGo2/HomeToGo2/ClientApp/src/app/Authentication/register.component.ts"],"sourcesContent":["<div class=\"form-container\">\n  <h2>Register</h2>\n  <form (ngSubmit)=\"register()\" #registerForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required #usernameField=\"ngModel\">\n      <div *ngIf=\"usernameField.invalid && (usernameField.dirty || usernameField.touched)\" class=\"alert alert-danger\">\n        Username is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" required email #emailField=\"ngModel\">\n      <div *ngIf=\"emailField.errors && (emailField.dirty || emailField.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"emailField.errors.required\">Email is required.</div>\n        <div *ngIf=\"emailField.errors.email\">Invalid email format.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required minlength=\"6\" #passwordField=\"ngModel\">\n      <div *ngIf=\"passwordField.errors && (passwordField.dirty || passwordField.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"passwordField.errors.required\">Password is required.</div>\n        <div *ngIf=\"passwordField.errors.minlength\">Password must be at least 6 characters long with a number and a symbol.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"confirmPassword\">Confirm Password:</label>\n      <input type=\"password\" id=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" required #confirmPasswordField=\"ngModel\">\n      <div *ngIf=\"confirmPasswordField.errors && (confirmPasswordField.dirty || confirmPasswordField.touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"confirmPasswordField.errors.required\">Confirmation password is required.</div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registerForm.form.valid\">Register</button>\n    <a id=\"loginregister\" [routerLink]=\"['/login']\" class=\"btn btn-outline-secondary\">Or Login</a>\n  </form>\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n  <div *ngIf=\"successMessage\" class=\"alert alert-success\">{{ successMessage }}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  email: string = '';\n  username: string = ''; // Add username\n  password: string = '';\n  confirmPassword: string = '';\n  errorMessage: string = '';\n  successMessage: string = '';\n  isLoading: boolean = false;\n\n  // Inject AuthService and Router for handling registration and navigation\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    // Lifecycle hook for initialization, can be used for additional setup\n  }\n\n  register() {\n    // Reset error and success messages\n    this.errorMessage = '';\n    this.successMessage = '';\n    // Set loading status to true\n    this.isLoading = true;\n\n    // Check if password and confirm password fields match\n    if (this.password !== this.confirmPassword) {\n      this.isLoading = false;\n      this.errorMessage = 'Passwords do not match';\n      return;\n    }\n\n    // Call AuthService's register method with email, username, and password\n    this.authService.register(this.email, this.username, this.password).subscribe(\n      response => {\n        // On successful registration, display a success message and automatically log in the user\n        this.successMessage = 'Registration successful!';\n        this.loginAfterRegister(); // Call the login function after successful registration\n      },\n      error => {\n        // Handle errors and display message to the user\n        this.isLoading = false;\n        this.errorMessage = error.error.message || 'Registration failed';\n      }\n    );\n  }\n\n  // Private method to automatically log in the user after successful registration\n  private loginAfterRegister() {\n    this.authService.login(this.username, this.password).subscribe(\n      success => {\n        // Navigate to the home or dashboard page after successful login\n        this.router.navigate(['/']);\n      },\n      loginError => {\n        // Handle login error after registration\n        this.errorMessage = 'Automatic login failed. Please log in manually.';\n        this.isLoading = false;\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}