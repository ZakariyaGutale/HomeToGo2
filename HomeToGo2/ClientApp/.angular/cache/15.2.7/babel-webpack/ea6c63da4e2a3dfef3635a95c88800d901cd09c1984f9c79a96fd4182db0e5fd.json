{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./listings.service\";\nexport class ListingFormComponent {\n  constructor(_formbuilder, _router, _route, _listingService) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._listingService = _listingService;\n    this.isEditMode = false;\n    this.listingId = -1;\n    this.listingForm = _formbuilder.group({\n      title: ['', Validators.required],\n      address: ['', Validators.required],\n      price: ['', Validators.required],\n      description: [''],\n      imageUrl: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"ListingCreate form submitted:\");\n    console.log(this.listingForm);\n    const newListing = this.listingForm.value;\n    if (this.isEditMode) {\n      this._listingService.updateListing(this.listingId, newListing).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/listings']);\n        } else {\n          console.log('Listing update failed');\n        }\n      });\n    } else {\n      this._listingService.createListing(newListing).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/listings']);\n        } else {\n          console.log('Listing creation failed');\n        }\n      });\n    }\n  }\n  backToListings() {\n    this._router.navigate(['/listings']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.listingId = +params['id']; // Convert to number\n        this.loadListingForEdit(this.listingId);\n      }\n    });\n  }\n  loadListingForEdit(listingId) {\n    this._listingService.getListingById(listingId).subscribe(listing => {\n      console.log('retrived listing: ', listing);\n      this.listingForm.patchValue({\n        title: listing.Title,\n        address: listing.Address,\n        price: listing.Price,\n        description: listing.Description,\n        imageUrl: listing.ImageUrl\n      });\n    }, error => {\n      console.error('Error loading listing for edit:', error);\n    });\n  }\n}\nListingFormComponent.ɵfac = function ListingFormComponent_Factory(t) {\n  return new (t || ListingFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ListingService));\n};\nListingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListingFormComponent,\n  selectors: [[\"app-listings-listingform\"]],\n  decls: 27,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function ListingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ListingFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"textarea\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 10);\n      i0.ɵɵtext(21, \"Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 12);\n      i0.ɵɵtext(24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function ListingFormComponent_Template_button_click_25_listener() {\n        return ctx.backToListings();\n      });\n      i0.ɵɵtext(26, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Listing\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.listingForm);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"disabled\", ctx.listingForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" Listing \");\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","ListingFormComponent","constructor","_formbuilder","_router","_route","_listingService","listingForm","group","title","required","address","price","description","imageUrl","onSubmit","console","log","newListing","value","isEditMode","updateListing","listingId","subscribe","response","success","message","navigate","createListing","backToListings","ngOnInit","params","loadListingForEdit","getListingById","listing","patchValue","Title","Address","Price","Description","ImageUrl","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/zakarianurgutale/Projects/HomeToGo2/HomeToGo2/ClientApp/src/app/Listings/listingform.component.ts","/Users/zakarianurgutale/Projects/HomeToGo2/HomeToGo2/ClientApp/src/app/Listings/listingform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ListingService } from './listings.service';\n\n@Component({\n  selector: \"app-listings-listingform\",\n  templateUrl: \"./listingform.component.html\"\n})\nexport class ListingFormComponent {\n  listingForm: FormGroup;\n  isEditMode: boolean = false;\n  listingId: number = -1;\n\n  constructor(\n    private _formbuilder: FormBuilder,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _listingService: ListingService\n  ) {\n    this.listingForm = _formbuilder.group({\n      title: ['', Validators.required],\n      address: ['', Validators.required],\n      price: ['', Validators.required],\n      description: [''],\n      imageUrl: ['']\n    });\n  }\n\n  onSubmit() {\n    console.log(\"ListingCreate form submitted:\");\n    console.log(this.listingForm);\n    const newListing = this.listingForm.value;\n    if (this.isEditMode) {\n      this._listingService.updateListing(this.listingId, newListing)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/listings']);\n          }\n          else {\n            console.log('Listing update failed');\n          }\n        });\n    }\n    else {\n      this._listingService.createListing(newListing)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/listings']);\n          }\n          else {\n            console.log('Listing creation failed');\n          }\n        });\n    }\n  }\n\n  backToListings() {\n    this._router.navigate(['/listings']);\n  }\n\n  ngOnInit(): void {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.listingId = +params['id']; // Convert to number\n        this.loadListingForEdit(this.listingId);\n      }\n    });\n  }\n\n  loadListingForEdit(listingId: number) {\n    this._listingService.getListingById(listingId)\n      .subscribe(\n        (listing: any) => {\n          console.log('retrived listing: ', listing);\n          this.listingForm.patchValue({\n            title: listing.Title,\n            address: listing.Address,\n            price: listing.Price,\n            description: listing.Description,\n            imageUrl: listing.ImageUrl\n          });\n        },\n        (error: any) => {\n          console.error('Error loading listing for edit:', error);\n        }\n      );\n  }\n\n}","<h2>{{ isEditMode ? 'Update' : 'Create' }}  Listing</h2>\n\n<form [formGroup]=\"listingForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"title\">Title:</label>\n        <input type=\"text\" id=\"title\" formControlName=\"title\" class=\"form-control\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"address\">Address:</label>\n        <input type=\"text\" id=\"address\" formControlName=\"address\" class=\"form-control\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"price\">Price:</label>\n        <input type=\"number\" id=\"price\" formControlName=\"price\" class=\"form-control\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"description\">Description:</label>\n        <textarea id=\"description\" formControlName=\"description\" class=\"form-control\"></textarea>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"imageUrl\">Image URL:</label>\n        <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" />\n    </div>\n    <button class='btn btn-primary' type=\"submit\" [disabled]=\"listingForm.invalid\">\n    {{ isEditMode ? 'Update' : 'Create' }} Listing\n    </button>\n    <button class=\"btn btn-secondary\" (click)=\"backToListings()\">Cancel</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}