{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./reservations.service\";\nfunction ReservationsComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ReservationsComponent_tr_20_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const reservation_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteReservation(reservation_r1.ReservationId));\n    });\n    i0.ɵɵtext(19, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const reservation_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r1.ReservationId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 6, reservation_r1.ReservationDate, \"shortDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(reservation_r1.Listing == null ? null : reservation_r1.Listing.Title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 9, reservation_r1.CheckInDate, \"shortDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 12, reservation_r1.CheckOutDate, \"shortDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(16, 15, reservation_r1.TotalPrice, \"NOK \"));\n  }\n}\nexport class ReservationsComponent {\n  constructor(_router, _ReservationService) {\n    this._router = _router;\n    this._ReservationService = _ReservationService;\n    this.viewTitle = 'Table';\n    this.displayImage = true;\n    this.reservations = [];\n  }\n  ngOnInit() {\n    this.getReservations();\n  }\n  getReservations() {\n    this._ReservationService.getReservations().subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      this.reservations = data; // Corrected variable name\n      console.log('Fetched Reservations:', this.reservations);\n    });\n  }\n  toggleImage() {\n    this.displayImage = !this.displayImage;\n  }\n  navigateToReservationForm() {\n    this._router.navigate(['/reservationform']);\n  }\n  deleteReservation(id) {\n    if (confirm('Are you sure you want to delete this reservation?')) {\n      this._ReservationService.deleteReservation(id).subscribe(() => {\n        // Refresh the list or remove the item from the array\n        this.reservations = this.reservations.filter(reservation => reservation.ReservationId !== id);\n      });\n    }\n  }\n}\nReservationsComponent.ɵfac = function ReservationsComponent_Factory(t) {\n  return new (t || ReservationsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ReservationService));\n};\nReservationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReservationsComponent,\n  selectors: [[\"app-reservations-component\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[\"id\", \"tableLabel\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function ReservationsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"List of Reservations\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 1)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Reservation Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Order Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Listing\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Check In Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Check Out Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Totalprice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, ReservationsComponent_tr_20_Template, 20, 18, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ReservationsComponent_Template_button_click_21_listener() {\n        return ctx.navigateToReservationForm();\n      });\n      i0.ɵɵtext(22, \"Create New Reservation\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.reservations);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAgBEA,0BAA6C;IACvCA,YAA6B;IAAAA,iBAAK;IACtCA,0BAAI;IAAAA,YAAkD;;IAAAA,iBAAK;IAC3DA,0BAAI;IAAAA,YAA8B;IAAAA,iBAAK;IACvCA,0BAAI;IAAAA,YAA8C;;IAAAA,iBAAK;IACvDA,2BAAI;IAAAA,aAA+C;;IAAAA,iBAAK;IACxDA,2BAAI;IAAAA,aAA4C;;IAAAA,iBAAK;IACrDA,2BAAI;IAA+BA;MAAA;MAAA;MAAA;MAAA,OAASA,qEAA4C;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IANrGA,eAA6B;IAA7BA,kDAA6B;IAC7BA,eAAkD;IAAlDA,uFAAkD;IAClDA,eAA8B;IAA9BA,0FAA8B;IAC9BA,eAA8C;IAA9CA,oFAA8C;IAC9CA,eAA+C;IAA/CA,sFAA+C;IAC/CA,eAA4C;IAA5CA,+EAA4C;;;ACZpD,OAAM,MAAOC,qBAAqB;EAKhCC,YAAoBC,OAAe,EAAUC,mBAAuC;IAAhE,YAAO,GAAPD,OAAO;IAAkB,wBAAmB,GAAnBC,mBAAmB;IAJhE,cAAS,GAAW,OAAO;IAC3B,iBAAY,GAAY,IAAI;IAC5B,iBAAY,GAAmB,EAAE;EAEuD;EAExFC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EACAA,eAAe;IACb,IAAI,CAACF,mBAAmB,CAACE,eAAe,EAAE,CACvCC,SAAS,CAAEC,IAAoB,IAAI;MAClCC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MACxC,IAAI,CAACK,YAAY,GAAGL,IAAI,CAAC,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACG,YAAY,CAAC;IACzD,CAAC,CAAC;EACN;EAGAC,WAAW;IACT,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAC,yBAAyB;IACvB,IAAI,CAACb,OAAO,CAACc,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAC7C;EAEAC,iBAAiB,CAACC,EAAU;IAC1B,IAAIC,OAAO,CAAC,mDAAmD,CAAC,EAAE;MAChE,IAAI,CAAChB,mBAAmB,CAACc,iBAAiB,CAACC,EAAE,CAAC,CAACZ,SAAS,CAAC,MAAK;QAC5D;QACA,IAAI,CAACM,YAAY,GAAG,IAAI,CAACA,YAAY,CAACQ,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACC,aAAa,KAAKJ,EAAE,CAAC;MAC/F,CAAC,CAAC;;EAEN;;AAnCWlB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlC5B,6BAAoB;MAAAA,oCAAoB;MAAAA,iBAAK;MAE7CA,gCAAgE;MAGxDA,8BAAc;MAAAA,iBAAK;MACvBA,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MACnBA,0BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,8BAAa;MAAAA,iBAAK;MACtBA,2BAAI;MAAAA,+BAAc;MAAAA,iBAAK;MACvBA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGjBA,8BAAO;MACPA,wEAQK;MACLA,iBAAQ;MAIVA,kCAAsE;MAAtCA;QAAA,OAAS6B,+BAA2B;MAAA,EAAC;MAAC7B,uCAAsB;MAAAA,iBAAS;;;MAbvEA,gBAAe;MAAfA,0CAAe","names":["i0","ReservationsComponent","constructor","_router","_ReservationService","ngOnInit","getReservations","subscribe","data","console","log","JSON","stringify","reservations","toggleImage","displayImage","navigateToReservationForm","navigate","deleteReservation","id","confirm","filter","reservation","ReservationId","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/ibrahim/Projects/HomeToGo2/HomeToGo2/HomeToGo2/ClientApp/src/app/reservations/reservations.component.html","/Users/ibrahim/Projects/HomeToGo2/HomeToGo2/HomeToGo2/ClientApp/src/app/reservations/reservations.component.ts"],"sourcesContent":["<!-- reservation.component.html -->\n<h1 id=\"tableLabel\">List of Reservations</h1>\n\n<table class='table table-striped' aria-labelledby=\"tableLabel\">\n  <thead>\n  <tr>\n    <th>Reservation Id</th>\n    <th>Order Date</th>\n    <th>Listing</th> <!-- Added this line -->\n    <th>Check In Date</th>\n    <th>Check Out Date</th>\n    <th>Totalprice</th>\n    <th>Delete</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor='let reservation of reservations'>\n    <td>{{reservation.ReservationId}}</td>\n    <td>{{reservation.ReservationDate | date:'shortDate'}}</td>\n    <td>{{reservation.Listing?.Title}}</td>\n    <td>{{reservation.CheckInDate | date:'shortDate'}}</td>\n    <td>{{reservation.CheckOutDate | date:'shortDate'}}</td>\n    <td>{{reservation.TotalPrice | currency:'NOK '}}</td>\n    <td><button class=\"btn btn-danger\" (click)=\"deleteReservation(reservation.ReservationId)\">Delete</button></td>\n  </tr>\n  </tbody>\n\n</table>\n\n<button class=\"btn btn-primary\" (click)=\"navigateToReservationForm()\">Create New Reservation</button>\n","import { Component, OnInit } from '@angular/core';\nimport { IReservation } from './reservation';\nimport { Router } from '@angular/router';\nimport { ReservationService } from './reservations.service';\n\n@Component({\n  selector: 'app-reservations-component',\n  templateUrl: './reservations.component.html',\n  styleUrls: ['./reservations.component.css']\n})\nexport class ReservationsComponent implements OnInit {\n  viewTitle: string = 'Table';\n  displayImage: boolean = true;\n  reservations: IReservation[] = [];\n\n  constructor(private _router: Router, private _ReservationService: ReservationService) { }\n\n  ngOnInit(): void {\n    this.getReservations();\n  }\n  getReservations(): void {\n    this._ReservationService.getReservations()\n      .subscribe((data: IReservation[]) => {\n        console.log('All', JSON.stringify(data));\n        this.reservations = data; // Corrected variable name\n        console.log('Fetched Reservations:', this.reservations);\n      });\n  }\n\n\n  toggleImage(): void {\n    this.displayImage = !this.displayImage;\n  }\n\n  navigateToReservationForm() {\n    this._router.navigate(['/reservationform']);\n  }\n\n  deleteReservation(id: number): void {\n    if (confirm('Are you sure you want to delete this reservation?')) {\n      this._ReservationService.deleteReservation(id).subscribe(() => {\n        // Refresh the list or remove the item from the array\n        this.reservations = this.reservations.filter(reservation => reservation.ReservationId !== id);\n      });\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}