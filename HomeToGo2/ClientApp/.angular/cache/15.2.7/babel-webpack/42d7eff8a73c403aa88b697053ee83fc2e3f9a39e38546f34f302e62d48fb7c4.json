{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Authentication/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.successMessage);\n  }\n}\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.confirmPassword = '';\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.isLoading = false;\n  }\n  ngOnInit() {}\n  register() {\n    // Reset error and success messages\n    this.errorMessage = '';\n    this.successMessage = '';\n    if (this.password !== this.confirmPassword) {\n      this.errorMessage = 'Passwords do not match';\n      return;\n    }\n    // Additional validation can be added here (e.g., email format, password strength)\n    this.isLoading = true;\n    this.authService.register(this.email, this.password).subscribe(response => {\n      // Handle the successful registration\n      this.isLoading = false;\n      this.successMessage = 'Registration successful! Redirecting to login...';\n      // Redirect to login or other page after a delay\n      setTimeout(() => {\n        this.router.navigate(['/']);\n      }, 2000);\n    }, error => {\n      // Handle errors, such as displaying a message\n      this.isLoading = false;\n      this.errorMessage = error.error.message || 'Registration failed';\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"register-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵtext(17, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, RegisterComponent_div_18_Template, 2, 1, \"div\", 10);\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif;\\n  background-color: #f5f5f7;\\n  color: #333;\\n  margin: 0;\\n  padding: 0;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  color: #1d1d1f;\\n  text-align: center;\\n  font-weight: normal;\\n}\\n\\n\\n.form-container[_ngcontent-%COMP%] {\\n  background-color: white;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  padding: 20px;\\n  max-width: 400px;\\n  width: 100%;\\n}\\n\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  border: 1px solid #d1d1d6;\\n  border-radius: 5px;\\n  box-sizing: border-box;\\n}\\n\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #0071e3;\\n  color: white;\\n  border: none;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  width: 100%;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #0051a8;\\n}\\n\\n\\n.alert[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  text-align: center;\\n}\\n\\n.alert-danger[_ngcontent-%COMP%] {\\n  background-color: #ff3b30;\\n  color: white;\\n}\\n\\n.alert-success[_ngcontent-%COMP%] {\\n  background-color: #34c759;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXV0aGVudGljYXRpb24vcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUI7QUFDbkI7RUFDRSx1R0FBdUc7RUFDdkcseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxTQUFTO0VBQ1QsVUFBVTtFQUNWLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCOztBQUVBLG1CQUFtQjtBQUNuQjtFQUNFLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsd0NBQXdDO0VBQ3hDLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiOztBQUVBLGVBQWU7QUFDZjtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtBQUN4Qjs7QUFFQSxZQUFZO0FBQ1o7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUEsbUJBQW1CO0FBQ25CO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBHZW5lcmFsIFN0eWxlcyAqL1xuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY3O1xuICBjb2xvcjogIzMzMztcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuaDIge1xuICBjb2xvcjogIzFkMWQxZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4vKiBGb3JtIENvbnRhaW5lciAqL1xuLmZvcm0tY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKiBGb3JtIEdyb3VwICovXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbi5mb3JtLWdyb3VwIGxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5mb3JtLWdyb3VwIGlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkMWQxZDY7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLyogQnV0dG9ucyAqL1xuYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzFlMztcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1MWE4O1xufVxuXG4vKiBBbGVydCBNZXNzYWdlcyAqL1xuLmFsZXJ0IHtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5hbGVydC1kYW5nZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYzYjMwO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5hbGVydC1zdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0Yzc1OTtcbiAgY29sb3I6IHdoaXRlO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAkBEA,+BAAqD;IAAAA,YAAkB;IAAAA,iBAAM;;;;IAAxBA,eAAkB;IAAlBA,yCAAkB;;;;;IACvEA,+BAAwD;IAAAA,YAAoB;IAAAA,iBAAM;;;;IAA1BA,eAAoB;IAApBA,2CAAoB;;;ACT9E,OAAM,MAAOC,iBAAiB;EAQ5BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAP5D,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;IACrB,oBAAe,GAAW,EAAE;IAC5B,iBAAY,GAAW,EAAE;IACzB,mBAAc,GAAW,EAAE;IAC3B,cAAS,GAAY,KAAK;EAE8C;EAExEC,QAAQ,IACR;EAEAC,QAAQ;IACN;IACA,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,cAAc,GAAG,EAAE;IAExB,IAAI,IAAI,CAACC,QAAQ,KAAK,IAAI,CAACC,eAAe,EAAE;MAC1C,IAAI,CAACH,YAAY,GAAG,wBAAwB;MAC5C;;IAGF;IAEA,IAAI,CAACI,SAAS,GAAG,IAAI;IACrB,IAAI,CAACR,WAAW,CAACG,QAAQ,CAAC,IAAI,CAACM,KAAK,EAAE,IAAI,CAACH,QAAQ,CAAC,CAACI,SAAS,CAC5DC,QAAQ,IAAG;MACT;MACA,IAAI,CAACH,SAAS,GAAG,KAAK;MACtB,IAAI,CAACH,cAAc,GAAG,kDAAkD;MAExE;MACAO,UAAU,CAAC,MAAK;QACd,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EACDC,KAAK,IAAG;MACN;MACA,IAAI,CAACN,SAAS,GAAG,KAAK;MACtB,IAAI,CAACJ,YAAY,GAAGU,KAAK,CAACA,KAAK,CAACC,OAAO,IAAI,qBAAqB;IAClE,CAAC,CACF;EACH;;AA3CWjB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT9BvB,8BAAgC;MAC1BA,wBAAQ;MAAAA,iBAAK;MACjBA,+BAA8B;MAAxBA;QAAA,OAAYwB,cAAU;MAAA,EAAC;MAC3BxB,8BAAwB;MACHA,sBAAM;MAAAA,iBAAQ;MACjCA,gCAAyE;MAA1CA;QAAA;MAAA,EAAmB;MAAlDA,iBAAyE;MAE3EA,8BAAwB;MACAA,0BAAS;MAAAA,iBAAQ;MACvCA,iCAAqF;MAAhDA;QAAA;MAAA,EAAsB;MAA3DA,iBAAqF;MAEvFA,+BAAwB;MACOA,kCAAiB;MAAAA,iBAAQ;MACtDA,iCAA0G;MAA9DA;QAAA;MAAA,EAA6B;MAAzEA,iBAA0G;MAE5GA,kCAA8C;MAAAA,yBAAQ;MAAAA,iBAAS;MAEjEA,qEAA6E;MAC7EA,qEAAkF;MACpFA,iBAAM;;;MAd+BA,eAAmB;MAAnBA,mCAAmB;MAIbA,eAAsB;MAAtBA,sCAAsB;MAIfA,eAA6B;MAA7BA,6CAA6B;MAIvEA,eAAkB;MAAlBA,uCAAkB;MAClBA,eAAoB;MAApBA,yCAAoB","names":["i0","RegisterComponent","constructor","authService","router","ngOnInit","register","errorMessage","successMessage","password","confirmPassword","isLoading","email","subscribe","response","setTimeout","navigate","error","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/zakarianurgutale/Projects/HomeToGo2/HomeToGo2/ClientApp/src/app/Authentication/register.component.html","/Users/zakarianurgutale/Projects/HomeToGo2/HomeToGo2/ClientApp/src/app/Authentication/register.component.ts"],"sourcesContent":["<!-- register.component.html -->\n<div class=\"register-container\">\n  <h2>Register</h2>\n  <form (ngSubmit)=\"register()\">\n    <div class=\"form-group\">\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"confirmPassword\">Confirm Password:</label>\n      <input type=\"password\" id=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" required>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n  </form>\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n  <div *ngIf=\"successMessage\" class=\"alert alert-success\">{{ successMessage }}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../Authentication/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n\n})\nexport class RegisterComponent implements OnInit {\n  email: string = '';\n  password: string = '';\n  confirmPassword: string = '';\n  errorMessage: string = '';\n  successMessage: string = '';\n  isLoading: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    // Reset error and success messages\n    this.errorMessage = '';\n    this.successMessage = '';\n\n    if (this.password !== this.confirmPassword) {\n      this.errorMessage = 'Passwords do not match';\n      return;\n    }\n\n    // Additional validation can be added here (e.g., email format, password strength)\n\n    this.isLoading = true;\n    this.authService.register(this.email, this.password).subscribe(\n      response => {\n        // Handle the successful registration\n        this.isLoading = false;\n        this.successMessage = 'Registration successful! Redirecting to login...';\n\n        // Redirect to login or other page after a delay\n        setTimeout(() => {\n          this.router.navigate(['/']);\n        }, 2000);\n      },\n      error => {\n        // Handle errors, such as displaying a message\n        this.isLoading = false;\n        this.errorMessage = error.error.message || 'Registration failed';\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}