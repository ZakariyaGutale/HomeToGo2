{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./reservations.service\";\nimport * as i4 from \"../listings/listings.service\";\nimport * as i5 from \"@angular/common\";\nfunction ReservationFormComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const listing_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", listing_r5.ListingId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", listing_r5.Title, \" \");\n  }\n}\nfunction ReservationFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Please select a listing. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Please enter a check-in date. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Please enter a check-out date. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReservationFormComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Check-out date must be after the check-in date. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ReservationFormComponent {\n  constructor(formBuilder, router, reservationService, listingService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.reservationService = reservationService;\n    this.listingService = listingService;\n    this.listings = [];\n    this.today = this.formatDate(new Date());\n    this.threeDaysLater = this.formatDate(new Date(new Date().getTime() + 3 * 24 * 60 * 60 * 1000));\n    this.reservationForm = this.formBuilder.group({\n      ListingId: ['', Validators.required],\n      CheckInDate: [this.today, Validators.required],\n      CheckOutDate: [this.threeDaysLater, Validators.required]\n    }, {\n      validators: this.dateRangeValidator\n    });\n  }\n  ngOnInit() {\n    this.loadListings();\n  }\n  loadListings() {\n    this.listingService.getListings().subscribe({\n      next: listings => this.listings = listings,\n      error: error => console.error('Error loading listings', error)\n    });\n  }\n  onSubmit() {\n    console.log(\"Reservation form submitted: \");\n    console.log(this.reservationForm.value);\n    const newReservation = this.reservationForm.value;\n    this.reservationService.createReservation(newReservation).subscribe({\n      next: response => {\n        console.log(response.message);\n        this.router.navigate(['/reservations']);\n      },\n      error: error => console.error('Reservation creation failed', error)\n    });\n  }\n  backToReservations() {\n    this.router.navigate(['/reservations']);\n  }\n  formatDate(date) {\n    return date.toISOString().split('T')[0];\n  }\n  // Custom validator for checking date range\n  dateRangeValidator(group) {\n    const checkInDate = group.get('CheckInDate')?.value;\n    const checkOutDate = group.get('CheckOutDate')?.value;\n    // Check if both dates are filled and if check-out date is after check-in date\n    if (checkInDate && checkOutDate && new Date(checkOutDate) <= new Date(checkInDate)) {\n      return {\n        dateRangeInvalid: true\n      };\n    }\n    return null;\n  }\n}\nReservationFormComponent.ɵfac = function ReservationFormComponent_Factory(t) {\n  return new (t || ReservationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ReservationService), i0.ɵɵdirectiveInject(i4.ListingService));\n};\nReservationFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReservationFormComponent,\n  selectors: [[\"app-reservation-form\"]],\n  decls: 32,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"listingId\"], [1, \"text-danger\"], [\"id\", \"listingId\", \"formControlName\", \"ListingId\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"checkInDate\"], [\"type\", \"date\", \"id\", \"checkInDate\", \"formControlName\", \"CheckInDate\", 1, \"form-control\"], [\"for\", \"checkOutDate\"], [\"type\", \"date\", \"id\", \"checkOutDate\", \"formControlName\", \"CheckOutDate\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [3, \"value\"], [1, \"alert\", \"alert-danger\"]],\n  template: function ReservationFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Create New Reservation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ReservationFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Listings:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"span\", 3);\n      i0.ɵɵtext(7, \"*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 4)(9, \"option\", 5);\n      i0.ɵɵtext(10, \"Select a listing...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, ReservationFormComponent_option_11_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, ReservationFormComponent_div_12_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Check-In Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"span\", 3);\n      i0.ɵɵtext(17, \"*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵtemplate(19, ReservationFormComponent_div_19_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 10);\n      i0.ɵɵtext(22, \"Check-Out Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"span\", 3);\n      i0.ɵɵtext(24, \"*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 11);\n      i0.ɵɵtemplate(26, ReservationFormComponent_div_26_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, ReservationFormComponent_div_27_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementStart(28, \"button\", 12);\n      i0.ɵɵtext(29, \"Create Reservation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function ReservationFormComponent_Template_button_click_30_listener() {\n        return ctx.backToReservations();\n      });\n      i0.ɵɵtext(31, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listings);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.reservationForm.get(\"ListingId\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.reservationForm.get(\"ListingId\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.required));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.reservationForm.get(\"CheckInDate\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.reservationForm.get(\"CheckInDate\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors.required));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.reservationForm.get(\"CheckOutDate\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.reservationForm.get(\"CheckOutDate\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors.required));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.reservationForm.errors == null ? null : ctx.reservationForm.errors.dateRangeInvalid) && ctx.reservationForm.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.reservationForm.invalid);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ReservationFormComponent","constructor","formBuilder","router","reservationService","listingService","today","formatDate","Date","threeDaysLater","getTime","reservationForm","group","ListingId","required","CheckInDate","CheckOutDate","validators","dateRangeValidator","ngOnInit","loadListings","getListings","subscribe","next","listings","error","console","onSubmit","log","value","newReservation","createReservation","response","message","navigate","backToReservations","date","toISOString","split","checkInDate","get","checkOutDate","dateRangeInvalid","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/ibrahim/Projects/HomeToGo2/HomeToGo2/HomeToGo2/ClientApp/src/app/reservations/reservationform.component.ts","/Users/ibrahim/Projects/HomeToGo2/HomeToGo2/HomeToGo2/ClientApp/src/app/reservations/reservationform.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ReservationService } from './reservations.service';\nimport { IListing } from '../listings/listing';\nimport { ListingService } from '../listings/listings.service';\n\n@Component({\n  selector: \"app-reservation-form\",\n  templateUrl: \"./reservationform.component.html\"\n})\nexport class ReservationFormComponent implements OnInit {\n  reservationForm: FormGroup;\n  listings: IListing[] = [];\n  today: string;\n  threeDaysLater: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private reservationService: ReservationService,\n    private listingService: ListingService\n  ) {\n    this.today = this.formatDate(new Date());\n    this.threeDaysLater = this.formatDate(new Date(new Date().getTime() + 3 * 24 * 60 * 60 * 1000));\n    this.reservationForm = this.formBuilder.group({\n      ListingId: ['', Validators.required],\n      CheckInDate: [this.today, Validators.required],\n      CheckOutDate: [this.threeDaysLater, Validators.required],\n    }, { validators: this.dateRangeValidator });\n  }\n\n\n  ngOnInit(): void {\n    this.loadListings();\n  }\n\n\n  loadListings(): void {\n    this.listingService.getListings().subscribe({\n      next: (listings) => this.listings = listings,\n      error: (error) => console.error('Error loading listings', error)\n    });\n  }\n\n  onSubmit(): void {\n    console.log(\"Reservation form submitted: \");\n    console.log(this.reservationForm.value);\n    const newReservation = this.reservationForm.value;\n    this.reservationService.createReservation(newReservation)\n      .subscribe({\n        next: (response) => {\n          console.log(response.message);\n          this.router.navigate(['/reservations']);\n        },\n        error: (error) => console.error('Reservation creation failed', error)\n      });\n  }\n\n  backToReservations(): void {\n    this.router.navigate(['/reservations']);\n  }\n\n  private formatDate(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  // Custom validator for checking date range\n  private dateRangeValidator(group: FormGroup): { [key: string]: any } | null {\n    const checkInDate = group.get('CheckInDate')?.value;\n    const checkOutDate = group.get('CheckOutDate')?.value;\n\n    // Check if both dates are filled and if check-out date is after check-in date\n    if (checkInDate && checkOutDate && new Date(checkOutDate) <= new Date(checkInDate)) {\n      return { dateRangeInvalid: true };\n    }\n    return null;\n  }\n}\n","<h2>Create New Reservation</h2>\n\n<form [formGroup]=\"reservationForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- Listing ID Dropdown -->\n  <div class=\"form-group\">\n    <label for=\"listingId\">Listings:</label><span class=\"text-danger\">*</span>\n    <select id=\"listingId\" formControlName=\"ListingId\" class=\"form-control\">\n      <option value=\"\">Select a listing...</option>\n      <option *ngFor=\"let listing of listings\" [value]=\"listing.ListingId\">\n        {{ listing.Title }}\n      </option>\n    </select>\n    <!-- Display error if listing is not selected -->\n    <div *ngIf=\"reservationForm.get('ListingId')?.touched && reservationForm.get('ListingId')?.errors?.required\" class=\"alert alert-danger\">\n      Please select a listing.\n    </div>\n  </div>\n\n  <!-- Check-In Date -->\n  <div class=\"form-group\">\n    <label for=\"checkInDate\">Check-In Date:</label><span class=\"text-danger\">*</span>\n    <input type=\"date\" id=\"checkInDate\" formControlName=\"CheckInDate\" class=\"form-control\" />\n    <!-- Display error if check-in date is not selected -->\n    <div *ngIf=\"reservationForm.get('CheckInDate')?.touched && reservationForm.get('CheckInDate')?.errors?.required\" class=\"alert alert-danger\">\n      Please enter a check-in date.\n    </div>\n  </div>\n\n  <!-- Check-Out Date -->\n  <div class=\"form-group\">\n    <label for=\"checkOutDate\">Check-Out Date:</label><span class=\"text-danger\">*</span>\n    <input type=\"date\" id=\"checkOutDate\" formControlName=\"CheckOutDate\" class=\"form-control\" />\n    <!-- Display error if check-out date is not selected -->\n    <div *ngIf=\"reservationForm.get('CheckOutDate')?.touched && reservationForm.get('CheckOutDate')?.errors?.required\" class=\"alert alert-danger\">\n      Please enter a check-out date.\n    </div>\n  </div>\n\n  <!-- Date Range Error -->\n  <div *ngIf=\"reservationForm.errors?.dateRangeInvalid && reservationForm.touched\" class=\"alert alert-danger\">\n    Check-out date must be after the check-in date.\n  </div>\n\n  <!-- Submission Buttons -->\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"reservationForm.invalid\">Create Reservation</button>\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"backToReservations()\">Cancel</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}